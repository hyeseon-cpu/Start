import cv2
from ultralytics import YOLO
import math

# YOLO 모델을 로드합니다. #yolov8s weights 필요!
model = YOLO("yolo-Weights/yolov8s.pt")

# 이미지 파일을 불러옵니다.
img = cv2.imread("water-people-view-city-crowd-recreation-1415172-pxhere.com.jpg")  # 이미지 파일 경로를 입력하세요.

# 클래스 이름을 정의합니다.
classNames = ["person", ...]  # 'person' 클래스만 필요한 경우, 이 리스트에서 'person'만 유지하십시오.

# 'person' 클래스의 인덱스를 찾습니다.
person_index = classNames.index('person')

results = model(img)

# 탐지된 사람의 수를 추적합니다.
person_count = 0

for r in results:
    boxes = r.boxes

    for box in boxes:
        # 클래스 이름
        cls = int(box.cls[0])

        if cls == person_index:  # 'person' 클래스만 확인
            person_count += 1

            # 바운딩 박스
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)

            # 중심점 계산
            center_x = int((x1 + x2) / 2)
            center_y = int((y1 + y2) / 2)

            # 바운딩 박스와 중심점을 그립니다.
            cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)
            cv2.circle(img, (center_x, center_y), 3, (0, 0, 255), -1)

# 화면에 탐지된 사람 수를 표시합니다.
cv2.putText(img, f"Detected Persons: {person_count}", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

# 결과 이미지를 보여줍니다.
cv2.imshow('Image', img)
cv2.waitKey(0)
cv2.destroyAllWindows()
